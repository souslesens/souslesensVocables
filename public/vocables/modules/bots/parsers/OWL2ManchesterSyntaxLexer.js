// Generated from parser/OWL2Manchester.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,15,118,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,
3,1,4,1,4,1,4,5,4,47,8,4,10,4,12,4,50,9,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,
5,1,5,3,5,61,8,5,1,6,4,6,64,8,6,11,6,12,6,65,1,7,1,7,5,7,70,8,7,10,7,12,
7,73,9,7,1,7,1,7,1,8,1,8,1,8,3,8,80,8,8,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,
11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,
1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
16,0,0,17,1,1,3,2,5,0,7,0,9,3,11,4,13,5,15,6,17,7,19,8,21,9,23,10,25,11,
27,12,29,13,31,14,33,15,1,0,3,2,0,65,90,97,122,1,0,48,57,1,0,34,34,122,0,
1,1,0,0,0,0,3,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,
0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,1,35,1,0,0,0,3,37,1,0,0,0,5,
39,1,0,0,0,7,41,1,0,0,0,9,43,1,0,0,0,11,60,1,0,0,0,13,63,1,0,0,0,15,67,1,
0,0,0,17,79,1,0,0,0,19,81,1,0,0,0,21,85,1,0,0,0,23,88,1,0,0,0,25,92,1,0,
0,0,27,97,1,0,0,0,29,102,1,0,0,0,31,106,1,0,0,0,33,110,1,0,0,0,35,36,5,40,
0,0,36,2,1,0,0,0,37,38,5,41,0,0,38,4,1,0,0,0,39,40,7,0,0,0,40,6,1,0,0,0,
41,42,7,1,0,0,42,8,1,0,0,0,43,48,3,5,2,0,44,47,3,5,2,0,45,47,3,7,3,0,46,
44,1,0,0,0,46,45,1,0,0,0,47,50,1,0,0,0,48,46,1,0,0,0,48,49,1,0,0,0,49,10,
1,0,0,0,50,48,1,0,0,0,51,52,5,116,0,0,52,53,5,114,0,0,53,54,5,117,0,0,54,
61,5,101,0,0,55,56,5,102,0,0,56,57,5,97,0,0,57,58,5,108,0,0,58,59,5,115,
0,0,59,61,5,101,0,0,60,51,1,0,0,0,60,55,1,0,0,0,61,12,1,0,0,0,62,64,7,1,
0,0,63,62,1,0,0,0,64,65,1,0,0,0,65,63,1,0,0,0,65,66,1,0,0,0,66,14,1,0,0,
0,67,71,5,34,0,0,68,70,8,2,0,0,69,68,1,0,0,0,70,73,1,0,0,0,71,69,1,0,0,0,
71,72,1,0,0,0,72,74,1,0,0,0,73,71,1,0,0,0,74,75,5,34,0,0,75,16,1,0,0,0,76,
80,3,11,5,0,77,80,3,15,7,0,78,80,3,9,4,0,79,76,1,0,0,0,79,77,1,0,0,0,79,
78,1,0,0,0,80,18,1,0,0,0,81,82,5,97,0,0,82,83,5,110,0,0,83,84,5,100,0,0,
84,20,1,0,0,0,85,86,5,111,0,0,86,87,5,114,0,0,87,22,1,0,0,0,88,89,5,110,
0,0,89,90,5,111,0,0,90,91,5,116,0,0,91,24,1,0,0,0,92,93,5,115,0,0,93,94,
5,111,0,0,94,95,5,109,0,0,95,96,5,101,0,0,96,26,1,0,0,0,97,98,5,111,0,0,
98,99,5,110,0,0,99,100,5,108,0,0,100,101,5,121,0,0,101,28,1,0,0,0,102,103,
5,109,0,0,103,104,5,105,0,0,104,105,5,110,0,0,105,30,1,0,0,0,106,107,5,109,
0,0,107,108,5,97,0,0,108,109,5,120,0,0,109,32,1,0,0,0,110,111,5,101,0,0,
111,112,5,120,0,0,112,113,5,97,0,0,113,114,5,99,0,0,114,115,5,116,0,0,115,
116,5,108,0,0,116,117,5,121,0,0,117,34,1,0,0,0,7,0,46,48,60,65,71,79,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class OWL2ManchesterSyntaxLexer extends antlr4.Lexer {

    static grammarFileName = "OWL2Manchester.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'('", "')'", null, null, null, null, null, 
                         "'and'", "'or'", "'not'", "'some'", "'only'", "'min'", 
                         "'max'", "'exactly'" ];
	static symbolicNames = [ null, null, null, "ID", "BOOLEAN", "INT", "STRING", 
                          "VALUE", "KW_AND", "KW_OR", "KW_NOT", "KW_SOME", 
                          "KW_ONLY", "KW_MIN", "KW_MAX", "KW_EXACTLY" ];
	static ruleNames = [ "T__0", "T__1", "LETTER", "DIGIT", "ID", "BOOLEAN", 
                      "INT", "STRING", "VALUE", "KW_AND", "KW_OR", "KW_NOT", 
                      "KW_SOME", "KW_ONLY", "KW_MIN", "KW_MAX", "KW_EXACTLY" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

OWL2ManchesterSyntaxLexer.EOF = antlr4.Token.EOF;
OWL2ManchesterSyntaxLexer.T__0 = 1;
OWL2ManchesterSyntaxLexer.T__1 = 2;
OWL2ManchesterSyntaxLexer.ID = 3;
OWL2ManchesterSyntaxLexer.BOOLEAN = 4;
OWL2ManchesterSyntaxLexer.INT = 5;
OWL2ManchesterSyntaxLexer.STRING = 6;
OWL2ManchesterSyntaxLexer.VALUE = 7;
OWL2ManchesterSyntaxLexer.KW_AND = 8;
OWL2ManchesterSyntaxLexer.KW_OR = 9;
OWL2ManchesterSyntaxLexer.KW_NOT = 10;
OWL2ManchesterSyntaxLexer.KW_SOME = 11;
OWL2ManchesterSyntaxLexer.KW_ONLY = 12;
OWL2ManchesterSyntaxLexer.KW_MIN = 13;
OWL2ManchesterSyntaxLexer.KW_MAX = 14;
OWL2ManchesterSyntaxLexer.KW_EXACTLY = 15;



