services:
    vocables:
        restart: unless-stopped
        image: souslesensvocables:${VOCABLES_TAG:-latest}
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "${VOCABLES_LISTEN_PORT:-3010}:3010"
        volumes:
            - "${DATA_ROOT_DIR:-/tmp}/souslesens/vocables/config:/app/config"
            - "${DATA_ROOT_DIR:-/tmp}/souslesens/vocables/logs:/app/logs"
            - "${DATA_ROOT_DIR:-/tmp}/souslesens/vocables/data:/app/data"
            - "${DATA_ROOT_DIR:-/tmp}/slsv-plugins:/app/plugins:ro"

        environment:
            USER_USERNAME: admin
            USER_PASSWORD: ${USER_PASSWORD}
            VOCABLES__sparql_server__url: http://virtuoso:8890/sparql
            VOCABLES__sparql_server__user: dba
            VOCABLES__sparql_server__password: ${DBA_PASSWORD}
            VOCABLES__formalOntologySourceLabel: ${FORMAL_ONTOLOGY_SOURCE_LABEL}
            VOCABLES__ElasticSearch__url: http://elasticsearch:9200/
            VOCABLES__jowlServer__url: http://jowl:9170
            VOCABLES__slsPyApi__url: http://sls-py-api:8000
        networks:
            - backend

    virtuoso:
        image: askomics/virtuoso:7.2.14
        ports:
            - ${VIRTUOSO_LISTEN_PORT:-8890}:8890
        environment:
            DBA_PASSWORD: ${DBA_PASSWORD}
            SPARQL_UPDATE: "true"
        volumes:
            - "${DATA_ROOT_DIR:-/tmp}/souslesens/virtuoso/data:\
              /data"
        networks:
            - backend

    postgres:
        image: postgis/postgis:16-3.4
        ports:
            - ${POSTGRES_LISTEN_PORT:-5432}:5432
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - "${DATA_ROOT_DIR:-/tmp}/souslesens/postgres:/var/lib/postgresql/data"
        networks:
            - backend

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.26
        environment:
            ES_JAVA_OPTS: "-Xmx256m -Xms256m"
            discovery.type: single-node
        volumes:
            - "${DATA_ROOT_DIR:-/tmp}/souslesens/elasticsearch/data:\
              /usr/share/elasticsearch/data"
        ports:
            - ${ELASTICSEARCH_LISTEN_PORT:-9200}:9200
        networks:
            - backend

    jowl:
        image: jowl:latest
        build:
            context: ${JOWL_PATH}
            dockerfile: Dockerfile
        container_name: jowl
        restart: always
        ports:
            - ${JOWL_LISTEN_PORT:-9170}:9170
        environment:
            VIRTUOSO_ENDPOINT: http://virtuoso:8890/sparql
            VIRTUOSO_USER: dba
            VIRTUOSO_PASSWORD: ${DBA_PASSWORD}
        networks:
            - backend

    sls-py-api:
        image: sls-py-api:latest
        build:
            context: ${SLSPYAPI_PATH}
            dockerfile: Dockerfile
        restart: always
        ports:
            - ${SLSPYAPI_LISTEN_PORT:-8008}:8000
        environment:
            MAIN_SOUSLESENS_CONFIG_DIR: /souslesens_config
            MAIN_API_URL_FOR_VIRTUOSO: http://sls-py-api:8000
            MAIN_LOG_LEVEL: debug
            MAIN_GET_RDF_GRAPH_METHOD: isql
            MAIN_POST_RDF_GRAPH_METHOD: sparql_load
            VIRTUOSO_HOST: virtuoso
            VIRTUOSO_PASSWORD: ${DBA_PASSWORD}
            CORS_ORIGINS: "*"
            RDF_BATCH_SIZE: 100000
        volumes:
            - "${DATA_ROOT_DIR:-/tmp}/souslesens/vocables/config:/souslesens_config:ro"
        networks:
            - backend


networks:
    backend:
        driver: "bridge"
